############### Blackjack Project #####################

#Difficulty Normal ðŸ˜Ž: Use all Hints below to complete the project.
#Difficulty Hard ðŸ¤”: Use only Hints 1, 2, 3 to complete the project.
#Difficulty Extra Hard ðŸ˜­: Only use Hints 1 & 2 to complete the project.
#Difficulty Expert ðŸ¤¯: Only use Hint 1 to complete the project.

############### Our Blackjack House Rules #####################

## The deck is unlimited in size. 
## There are no jokers. 
## The Jack/Queen/King all count as 10.
## The the Ace can count as 11 or 1.
## Use the following list as the deck of cards:
## cards = [11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10]
## The cards in the list have equal probability of being drawn.
## Cards are not removed from the deck as they are drawn.
## The computer is the dealer.

##################### Hints #####################

#Hint 1: Go to this website and try out the Blackjack game: 
#   https://games.washingtonpost.com/games/blackjack/
#Then try out the completed Blackjack project here: 
#   http://blackjack-final.appbrewery.repl.run

#Hint 2: Read this breakdown of program requirements: 
#   http://listmoz.com/view/6h34DJpvJBFVRlZfJvxF
#Then try to create your own flowchart for the program.

#Hint 3: Download and read this flow chart I've created: 
#   https://drive.google.com/uc?export=download&id=1rDkiHCrhaf9eX7u7yjM1qwSuyEk-rPnt

#Hint 4: Create a deal_card() function that uses the List below to *return* a random card.
#11 is the Ace.
#cards = [11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10]

#Hint 5: Deal the user and computer 2 cards each using deal_card() and append().
#user_cards = []
#computer_cards = []

#Hint 6: Create a function called calculate_score() that takes a List of cards as input 
#and returns the score. 
#Look up the sum() function to help you do this.

#Hint 7: Inside calculate_score() check for a blackjack (a hand with only 2 cards: ace + 10) and return 0 instead of the actual score. 0 will represent a blackjack in our game.

#Hint 8: Inside calculate_score() check for an 11 (ace). If the score is already over 21, remove the 11 and replace it with a 1. You might need to look up append() and remove().

#Hint 9: Call calculate_score(). If the computer or the user has a blackjack (0) or if the user's score is over 21, then the game ends.

#Hint 10: If the game has not ended, ask the user if they want to draw another card. If yes, then use the deal_card() function to add another card to the user_cards List. If no, then the game has ended.

#Hint 11: The score will need to be rechecked with every new card drawn and the checks in Hint 9 need to be repeated until the game ends.

#Hint 12: Once the user is done, it's time to let the computer play. The computer should keep drawing cards as long as it has a score less than 17.

#Hint 13: Create a function called compare() and pass in the user_score and computer_score. If the computer and user both have the same score, then it's a draw. If the computer has a blackjack (0), then the user loses. If the user has a blackjack (0), then the user wins. If the user_score is over 21, then the user loses. If the computer_score is over 21, then the computer loses. If none of the above, then the player with the highest score wins.

#Hint 14: Ask the user if they want to restart the game. If they answer yes, clear the console and start a new game of blackjack and show the logo from art.py.
import random
cards = [11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10]
dealer = []
user =[]
# 1st round:
new_desk = cards
random.shuffle(new_desk)
print(new_desk)
def take_card(new_desk):
    return new_desk.pop(-1)


dealer.append(take_card(new_desk))
user.append(take_card(new_desk))
dealer.append(take_card(new_desk))
user.append(take_card(new_desk))

print(f"Desk Dealer: {dealer}")
print(f"Desk Dealer: {user}")
score_dealer = 0
score_user = 0
# Score 1st round
def add_score(a,b):
    return a+b
score_dealer = add_score(dealer[0],dealer[1])
score_user = add_score(user[0],user[1])
print(f"Score Dealer: {score_dealer}")
print(f"Score User: {score_user}")

#Check dealer and user if have BJ?
blackjack = 11
def check_BJ(player):
    for i in range(len(player)):
        if blackjack == player[i]:
            return True
        else:
            return False
if check_BJ(dealer)==True:
    if score_dealer >21:
        score_dealer = score_dealer - 11 + 1
if check_BJ(user)==True:
    if score_user >21:
        score_user = score_user - 11 + 1



# Result Win Lose:
game_on = True

#Show the card:
print (f"Dealer Cards: [] - {dealer[1]}")
print(f"User Cards: {user[0]} - {user[1]}")

# Ask user get another card:
while game_on:
    another_card_user = input ("Do you want to get another card? y/n: ").lower()
    if another_card_user == "y":
        user.append(take_card(new_desk))
        print(f"Your cards: {user}")            
        score_user = score_user + user[-1]
        print(f"Your score: {score_user}")
        if score_user >21:
            game_on = False
            print("********************************")
            print(f"Dealer cards: {dealer}")
            print(f"Dealer score: {score_dealer}") 
            print(f"Your cards: {user}")     
            print(f"Your score: {score_user}") 
            print("You lose! Game over!")
    else:
        game_on = False

print(f"Score User: {score_user}")
while score_dealer <17:
    dealer.append(take_card(new_desk))
    score_dealer = score_dealer + dealer[-1]
    if score_dealer >21:
        game_on = False
        print("You win!")
    else:
        break
   

if score_dealer == score_user:

    print("********************************")
    print(f"Dealer cards: {dealer}")
    print(f"Dealer score: {score_dealer}") 
    print(f"Your cards: {user}")     
    print(f"Your score: {score_user}")                
    print("Draw Dealer and Player!!!")
elif score_dealer < score_user:

    print("********************************")
    print(f"Dealer cards: {dealer}")
    print(f"Dealer score: {score_dealer}") 
    print(f"Your cards: {user}")     
    print(f"Your score: {score_user}") 
    print("You win!")
else:

    print("********************************")
    print(f"Dealer cards: {dealer}")
    print(f"Dealer score: {score_dealer}")
    print(f"Your cards: {user}")      
    print(f"Your score: {score_user}")                
    print("You Lose!!!")
