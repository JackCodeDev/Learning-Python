MENU = {
    "espresso": {
        "ingredients": {
            "water": 50,
            "coffee": 18,
        },
        "cost": 1.5,
    },
    "latte": {
        "ingredients": {
            "water": 200,
            "milk": 150,
            "coffee": 24,
        },
        "cost": 2.5,
    },
    "cappuccino": {
        "ingredients": {
            "water": 250,
            "milk": 100,
            "coffee": 24,
        },
        "cost": 3.0,
    }
}

resources = {
    "water": 300,
    "milk": 200,
    "coffee": 100,
}
continue_oder = True
money = 0
change = 0


# 4. Check resources sufficient?
# a. When the user chooses a drink, the program should check if there are enough
# resources to make that drink.
# b. E.g. if Latte requires 200ml water but there is only 100ml left in the machine. It should
# not continue to make the drink but print: “Sorry there is not enough water.”
# c. The same should happen if another resource is depleted, e.g. milk or coffee.
def check_resources(resources_input, ingredients_input):
    for item in ingredients_input:
        if resources_input[item] < ingredients_input[item]:
            print(f"“Sorry there is not enough {item}.”")
            return False
    else:
        return True


# 5. Process coins.
# a. If there are sufficient resources to make the drink selected, then the program should
# prompt the user to insert coins.
# b. Remember that quarters = $0.25, dimes = $0.10, nickles = $0.05, pennies = $0.01
# c. Calculate the monetary value of the coins inserted. E.g. 1 quarter, 2 dimes, 1 nickel, 2
# pennies = 0.25 + 0.1 x 2 + 0.05 + 0.01 x 2 = $0.52
def coffee_order_cost(order_input, menu):
    """ Put order and menu and return the cost of coffee"""
    if order_input == "espresso":
        return menu['espresso']['cost']
    elif order_input == "latte":
        return menu['latte']['cost']
    elif order_input == "cappuccino":
        return menu['cappuccino']['cost']


def coffee_order_resource(order_input, menu):
    """ Put order and menu and return the ingredients"""
    if order_input == "espresso":
        return menu['espresso']['ingredients']
    elif order_input == "latte":
        return menu['latte']['ingredients']
    elif order_input == "cappuccino":
        return menu['cappuccino']['ingredients']


def process_coin():
    print("Please insert coin.")
    quarters = float(input("how many quarters?: "))
    dimes = float(input("how many dimes?: "))
    nickles = float(input("how many nickles?: "))
    pennies = float(input("how many pennies?: "))
    return 0.25 * quarters + 0.10 * dimes + 0.05 * nickles + 0.01 * pennies


while continue_oder:
    # 1. Prompt user by asking “What would you like? (espresso/latte/cappuccino):”
    # a. Check the user’s input to decide what to do next.
    # b. The prompt should show every time action has completed, e.g. once the drink is
    # dispensed. The prompt should show again to serve the next customer.
    order = input("“What would you like? (espresso/latte/cappuccino): ").lower()

    # 2. Turn off the Coffee Machine by entering “off” to the prompt.
    # a. For maintainers of the coffee machine, they can use “off” as the secret word to turn off
    # the machine. Your code should end execution when this happens.
    if order == "off":
        continue_oder = False
    # 3. Print report.
    # a. When the user enters “report” to the prompt, a report should be generated that shows
    # the current resource values. e.g.
    # Water: 100ml
    # Milk: 50ml
    # Coffee: 76g
    # Money: $2.5
    elif order == "report":
        print(
            f"Water: {resources['water']} \nMilk: {resources['milk']}\nCoffee: {resources['coffee']}\nMoney: ${money}")
    else:
        drink = MENU[order]
        if check_resources(resources, drink['ingredients']):
            if order == "espresso" or order == "latte" or order == "cappuccino":
                money_buyer = process_coin()
                change = money_buyer - coffee_order_cost(order, MENU)
                money += coffee_order_cost(order, MENU)

                if money_buyer > coffee_order_cost(order, MENU):
                    print(f"Here is ${round(change,2)} in change")
                    print(f"Here is your {order} ☕.Enjoy!")
                    money_buyer = 0
                    resources['water'] -= coffee_order_resource(order, MENU)['water']

                else:
                    print("Sorry that's not enough money. Money refunded.")
                    money_buyer = 0


